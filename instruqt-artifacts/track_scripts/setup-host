#!/bin/bash
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    echo "Waiting for Instruqt to finish booting the VM"
    sleep 1
done

virsh start rhel08

echo "${SSHKEY}" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh-keygen -f /root/.ssh/id_rsa -y > /root/.ssh/id_rsa.pub

usermod -aG wheel rhel

# MAC Addresses
# vm1:          52:54:00:d6:0c:72
# centos:       52:54:00:68:79:84
# rhel07:       52:54:00:02:ce:bb
# rhel08:       52:54:00:43:26:d3
# rhel09:       52:54:00:7f:e1:4e

# Get the IP of the VM belonging to vm1 based on arp.
while ! [ $( arp -an | grep 52:54:00:43:26:d3 | awk '{print $2}' | tr -d '()' )  ]; do echo "Waiting for arp to return rhel08 MAC address."; sleep 10; done;
echo "$( arp -an | grep 52:54:00:43:26:d3 | awk '{print $2}' | tr -d '()' ) rhel08" >> /etc/hosts

usermod -aG wheel rhel
echo redhat | passwd --stdin rhel

while ! ping -c 1 -W 1 rhel08; do echo "Waiting for rhel08 - network interface might be down."; sleep 10; done;

ssh -i /root/.ssh/id_rsa -o "StrictHostKeyChecking no" root@rhel08 "subscription-manager register --activationkey=${ACTIVATION_KEY} --org=12451665 --force"
subscription-manager register --activationkey=${ACTIVATION_KEY} --org=12451665 --force

#check web console url for certificate
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090

#also go ahead and echo it to a text file as well just for good measure
echo https://${HOSTNAME}.${_SANDBOX_ID}.instruqt.io:9090 >> ~/webconsoleurl.txt

# Enable EPEL for RHEL 9
subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

#install necessary components
dnf install -y certbot python3-certbot-nginx

#ensure certbot is successfully installed
certbot --version

#stop the process that is using TCP port 80; we need that port open for certbot
fuser -k 80/tcp

#request our certificate
certbot certonly --standalone --preferred-challenges http -d ${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io --non-interactive --agree-tos -m trackbot@instruqt.com -v

#configure our certificate for the web console (copy it into the cockpit certificate folder)
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/cert.pem >> /etc/cockpit/ws-certs.d/certificate.cert
cat /etc/letsencrypt/live/${HOSTNAME}.${INSTRUQT_PARTICIPANT_ID}.instruqt.io/privkey.pem >> /etc/cockpit/ws-certs.d/certificate.cert

#remove the old self-signed certificates
rm /etc/cockpit/ws-certs.d/0*

#restart cockpit to apply the changs
systemctl restart cockpit.socket

ssh -i /root/.ssh/id_rsa -o "StrictHostKeyChecking no" root@rhel08 "nmcli dev con eth0"
